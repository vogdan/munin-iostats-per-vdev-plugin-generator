#!/bin/bash

##
#
# *** see generator.sh for details ***
#

PLUGIN_NAME=$1
NAME=$2

cat <<EOF > $PLUGIN_NAME
#!/bin/bash

: << =cut

=head1 NAME

$PLUGIN_NAME - storage space graph for zpool $NAME

=head1 NOTES

Graph showing storage space status (alloc, free) values, as of zpool iostat (capacity fields), for zpool $NAME.

*** Automatically generated via shell script $PWD/$JE ***
*** $(date) ***

=head1 AUTHOR

Bogdan Dumitrica

=head1 LICENSE

GPLv2

=head1 MAGIC MARKERS

=cut


doConfig() {
	printf "graph_title Storage space - alloc/free for zpool '$NAME'\n"
	printf "graph_info zpool iostat capacity column values (alloc, free) for zpool group '$NAME'\n"
	printf "graph_args --base 1000 -l 0\n"
	printf "graph_scale no\n"
	printf "graph_vlabel storage alloc/free\n"
	printf "graph_category system\n"

	printf "${NAME}_st_a.label '$NAME' allocated capacity in G \n"
	printf "${NAME}_st_a.draw LINE\n"
	printf "${NAME}_st_f.label '$NAME' free capacity in G \n"
	printf "${NAME}_st_f.draw LINE\n"
}

doFetch() {
	zpool iostat | egrep $NAME | sed 's/G\ //g;s/G$//g' | awk '{ 
		printf "%s_st_a.value %s\n", \$1, \$2
		printf "%s_st_f.value %s\n", \$1, \$3 }'
#	cat /home/bogdan/zpoolverb.txt | egrep $NAME | sed 's/G\ //g;s/G$//g' | awk '{ 
#		printf "%s_st_a.value %s\n", \$1, \$2
#		printf "%s_st_a.value %s\n", \$1, \$3 }'
}
 
output_usage() {
	printf >&2 "%s - munin plugin - zpool iostat capacity alloc and free for zpool $NAME\n" \${0##*/}
	printf >&2 "Usage: %s [config]\n" \${0##*/}
}

case \$# in
    0)
        doFetch
        ;;
    1)
        case \$1 in
            config)
		        doConfig
                ;;
            *)
                output_usage
                exit 1
                ;;
        esac
        ;;
    *)
        output_usage
        exit 1
        ;;
esac
EOF

